
require 'rubygems'
require 'bundler/setup'
require "mailman"
require 'yaml'
require 'pp'
 


dir =  ARGV[0]
file = "#{dir}/.env"

File.open(file, "r").each do |record|
   key, value = record.chomp.split(',')
   ENV[key] = value
end


require "#{ENV['GB_RAILS_ROOT']}/config/environment"
require "#{ENV['GB_RAILS_ROOT']}/lib/custom/string_helper.rb"
require "#{ENV['GB_RAILS_ROOT']}/lib/custom/mailing_lists.rb"
require "#{ENV['GB_RAILS_ROOT']}/app/models/email.rb"
require "#{ENV['GB_RAILS_ROOT']}/script/recipient_list.rb"
require "#{ENV['GB_RAILS_ROOT']}/script/mail_utility.rb"

 
Mailman.config.logger = Logger.new File.expand_path("../../log/mailman.log", __FILE__)
Mailman.config.ignore_stdin = true
Mailman.config.poll_interval = 3


server = ENV['GB_RELAY_POP_SERVER'].gsub(/"/,'')
 
Mailman.config.pop3 = {
  :server           => server, 
  :port             => 995, 
  :ssl              => true,
  :username         => ENV['GB_RELAY_POP_USERNAME'],
  :password         => ENV['GB_RELAY_POP_PASSWORD']
} unless Mailman.config.pop3


$stdout.reopen(File.expand_path(File.expand_path("../../log/mailman.log", __FILE__), "w"))
$stderr.reopen(File.expand_path(File.expand_path("../../log/mailman.log", __FILE__), "w"))


if @x.nil? == false
  puts "raising error  x ========================================================================>"
  $stdout.flush
  raise "heeelllpppp!!!!!!!!"
else 
  puts "SETTING x ========================================================================>"
  @x = "x"
end

Mailman::Application.run do
  to('') do
      MailUtility.new.forward(message, params)
  end
end
   

 